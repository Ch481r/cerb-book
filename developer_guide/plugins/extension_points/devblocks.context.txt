devblocks.context
-----------------

The **devblocks.context** extension point allows you to create new tabs on the ``Activity`` page.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Contexts -->
    <extension point="devblocks.context">
        <id>example.context.object</id>
        <name>Example Context Object</name>
        <class>
            <file>api/App.php</file>
            <name>Context_ExampleObject</name>
        </class>
        <params>
            <param key="view_class" value="View_ExampleObject" />
            <param key="alias" value="example_object" />
            <param key="options">
                <value>
                    <data key="create" />
                    <data key="find" />
                    <data key="snippets" />
                    <data key="va_variable" />
                    <data key="workspace" />
                </value>
            </param>
        </params>
    </extension>

**<param key="view_class" value="View_ExampleObject" />**
    Sets the View class for this context.

**<param key="alias" value="example_object" />**
    A human-readable alias for the full context extension ``<id>``.  For example, ``ticket`` is the alias for ``cerberusweb.contexts.ticket``.

**<param key="options">**
    The options that this context supports.
    
    **<value>**
        The following options are available:
        
        - **<data key="create" />**
            This context allows new objects to be created from a popup.
        - **<data key="find" />**
            This context can be searched from :doc:`choosers </concepts/ui/choosers>`.
        - **<data key="snippets" />**
            This context provides snippet placeholders.
        - **<data key="va_variable" />**
            This context can be used in Virtual Attendant behavior variables.
        - **<data key="workspace" />**
            This context has worklists.

Implementation
==============
.. php:class:: ExampleObjectContext extends Extension_DevblocksContext
    
    .. php:method:: getRandom()

        This method is called when the test button is used on a VA. It should return a random object with its context.
        
	.. php:method:: getMeta($context_id)
	    
        This method is called when notifications are generated for your context. The id of the object is passed via the ``$context_id`` parameter. It should return an array with ``id``, ``name`` and ``permalink`` indices; the ``id`` should be the numerical ID of the object, the ``name`` should be the name or title of the object, and the ``permalink`` should be the full URL to the record after it's been passed through the URL service.
        
        :param integer $context_id: The id of the object.
        
        :returns: an array with ``id``, ``name``, and ``permalink`` indices.
        
	.. php:method:: getContext($object, &$token_labels, &$token_values, $prefix=null)
        
        This method is called when the context is retrieved for an object. The ``$token_labels`` and ``$token_values`` parameters are passed by reference, and you should add your own labels and values to these variables in your implementation.
        
        :param mixed $object: An instance of the current object.
        :param array &$token_labels: The various token labels imported for this context.
        :param array &$token_values: The various token values imported for this context.
        :param string $prefix: A human-friendly prefix for your token labels.
        
	.. php:method:: getChooserView()
    
        This method is called when a chooser dialog is shown for your context. This method should return the view that should be used for chooser dialogs. This will be displayed when a worker tries to link your object to another object.
    
	.. php:method:: getView($context=null, $context_id=null, $options=array())
        
        This method is called when the view for this context is displayed. If the ``$context`` and ``$context_id`` parameters are both specified, your implementation should only display records that are linked to the specified ``$context`` and ``$context_id``.
        
        :param string $context: The context to filter results against.
        :param integer $context_id: The context id to filter results against.

Examples
========

Address Context
~~~~~~~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.core/plugin.xml#L629
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.core/api/dao/address.php