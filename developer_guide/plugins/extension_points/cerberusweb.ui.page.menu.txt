cerberusweb.ui.page.menu
------------------------

The **cerberusweb.ui.page.menu** extension point allows you to create new menus which can be rendered on the config page, or a page you have created.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Page Menus -->
    <extension point="cerberusweb.ui.page.menu">
        <id>example.page.menu.custom</id>
        <name>Example Page Menu Custom Menu</name>
        <class>
            <file>api/App.php</file>
            <name>ExamplePageMenu_CustomMenu</name>
        </class>
        <params>
            <param key="page_id" value="core.page.configuration" />
        </params>
    </extension>

**<param key="page_id" value="core.page.configuration">**
    Binds the menu to the page_id ``core.page.configuration``. You can specify your own page_id, but you'll need to implement rendering the menus on that page yourself. You'll likely want to call the ``render()`` method for each of the page menus returned by ``getExtensions()``.

Implementation
==============
.. code-block:: php

    <?php
    abstract class Extension_PageMenu
        extends DevblocksExtension {
            const POINT = 'cerberusweb.ui.page.menu';
            
            /**
             * @return DevblocksExtensionManifest[]|Extension_PageMenu[]
             */
            static function getExtensions($as_instances=true, $page_id=null) {
                if(empty($page_id))
                    return DevblocksPlatform::getExtensions(self::POINT, $as_instances);
                
                $results = array();
                
                $exts = DevblocksPlatform::getExtensions(self::POINT, false);
                foreach($exts as $ext_id => $ext) {
                    if(0 == strcasecmp($page_id, $ext->params['page_id']))
                        $results[$ext_id] = $as_instances ? $ext->createInstance() : $ext;
                }
                
                // Sorting
                if($as_instances)
                    uasort($results, create_function('$a, $b', "return strcasecmp(\$a->manifest->name,\$b->manifest->name);\n"));
                else
                    uasort($results, create_function('$a, $b', "return strcasecmp(\$a->name,\$b->name);\n"));
                
                return $results;
            }
            
            abstract function render();
    };

**getExtensions($as_instances=true, $page_id=null)**
    Returns all of the page menus for the specified ``$page_id``. If no ``$page_id`` is set, this method returns all of the page menus currently registered with the platform. The ``$as_instances`` parameter allows you to specify whether or not to return instantiated objects for each of the page menus or just the extension (which you will need to instantiate yourself).\

**render()**
    This method will be called when the menu is rendered on the page. You'll most likely want to return HTML or render a template inside of this method.
    
Examples
========

Tasks tab
~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.core/plugin.xml#L1723
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.core/api/uri/tasks.php