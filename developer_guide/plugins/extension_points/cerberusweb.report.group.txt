cerberusweb.report.group
------------------------

The **cerberusweb.report** extension point allows you to create new tabs on the ``Reports`` page.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Report Groups -->
    <extension point="cerberusweb.report">
    	<id>report.group.example.report1</id>
    	<name>Example Reports Tab</name>
    	<class>
    		<file>api/App.php</file>
    		<name>ExampleReport</name>
    	</class>
    	<params>
    		<param key="report_name" value="reports.ui.group.example.report1" />
    		<param key="report_group" value="report.group.example" />
    	</params>
    </extension>

**<extension point="...">**
    Binds a new extension on the specified ``point``.

**<id>**
    Must be unique across all Cerb5 plugins. This is a dot-delimited namespace string. The name is entirely up to you, but the namespace should follow the name of your plugin, and the ID itself should have a hierarchy. If your plugin is named xyzcompany.myplugin then your extension IDs should follow the convention xyzcompany.myplugin.point.name where point.name represents the extension point and a unique identifier for each particular extension.

**<name>**
    A human-readable name for your extension. This can be anything you want. There are situations where you'll want to retrieve your extensions name and use it in functionality exposed to the user (e.g. in a dropdown list); and it's a great approach because the name can be quickly retrieved from the manifest (in memory) without running any plugin-level code.

**<class>**
    Tells Devblocks where to find the extension's implementation in the source code.

    **<file>**
        The relative path to the class file from your plugin's directory.

    **<name>**
        The class name.

**<params>**
    Allow the manifest to pass information to each implementation of an extension. Each <param> has a key and value attribute. These are static values that are not expected to change. You'll need to implement properties that are configured by the user. 
    
    **<param key="group_name" value="reports.ui.group.example.report1">**
        Sets the name of the report group. Devblocks will automatically pass this string through the :doc:`translation service` before rendering it, so you should use a namespaced translation string whenever possible. You can use literal text if you wish, though we advise against it.

    **<param key="acl" value="report.group.example">**
	        Specifies the permissions required for this report group to be displayed. If this param is omitted, the report group will automatically be displayed to all workers; otherwise, it will be displayed to only those workers with the permission indicated.
    See: :doc:`/developer_guide/plugins/extension_points/cerberusweb.config.tab`

Implementation
==============
.. code-block:: php

    <?php
    abstract class Extension_Report extends DevblocksExtension {
    	function __construct($manifest) {
    		parent::DevblocksExtension($manifest);
    	}
    
    	function render() {
    		// Overload
    	}
    };

**render()**
    This function is called when the report is displayed in the browser.

Examples
========

Custom Field Usage Report
~~~~~~~~~~~~~~~~~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.reports/plugin.xml#L61
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.reports/api/reports/custom_fields/CustomFieldsUsageReport.php