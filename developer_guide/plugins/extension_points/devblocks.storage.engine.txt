devblocks.storage.engine
------------------------

The **devblocks.storage.engine** extension point allows you to create new :doc:`Storage Engines` to store your data in.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Storage Engines -->
	<extension point="devblocks.storage.engine">
		<id>example.storage.engine</id>
		<name>Example Storage Engine</name>
		<class>
			<file>api/App.php</file>
			<name>ExampleDevblocksStorageEngine</name>
		</class>
		<params/>
	</extension>

Implementation
==============
.. php:class:: ExampleDevblocksStorageEngine extends Extension_DevblocksStorageEngine
    
    .. php:attr:: $_options
        :noindex:
        
        The current options for the storage engine profile.
        
    .. php:method:: renderConfig(Model_DevblocksStorageProfile $profile)
        :noindex:
        
        :param Model_DevblocksStorageProfile $profile: The instance of the profile being configured.
        
        This method renders the config form for this storage engine. See the documentation on :php:class:`Model_DevblocksStorageProfile` for more information on the data and methods available for each profile.
        
    .. php:method:: saveConfig(Model_DevblocksStorageProfile $profile)
        :noindex:
        
        :param Model_DevblocksStorageProfile $profile: The instance of the profile being saved.
        
        This method is called when a worker saves the config form. See the documentation on :php:class:`Model_DevblocksStorageProfile` for more information on the data and methods available for each profile.
        
    .. php:method:: testConfig()
        :noindex:
        
        This method is called when a worker clicks the test button. Your implementation should check the provided information, and return a boolean.        
        
	.. php:method:: exists($namespace, $key)
	    :noindex:
        
	    :param string $namespace: The namespace of the object.
	    :param string $key: The key identifying the object.
	    
        This method is called when the platform needs to determine if an object exists. Your implementation should check if the object exists, and return a boolean.
	    
    .. php:method:: put($namespace, $id, $data)
        :noindex:
        
        :param string $namespace: The namespace of the object.
	    :param integer $id: The id identifying the object.
	    :param string $data: The contents to save.
	    
	    :returns string: The key of the object or false.
	    
	    This method is called when content is saved to your storage profile. Your implementation should take the ``$namespace`` and ``$id`` and create a unique key from them, then assign  ``$data`` to that key. If there is an error, your implementation should return false, otherwise it should return the unique $key you generated.
	    
	.. php:method:: get($namespace, $key, &$fp=null)
	    :noindex:
        
	    :param string $namespace: The namespace of the object.
	    :param string $key: The key identifying the object.
	    :param resource $fp: An optional filepointer.
	    
	    :return string: The contents of the object.
	    
        This method is called when an object is retrieved from your storage engine.
        
	.. php:method:: delete($namespace, $key)
	    :noindex:
        
	    :param string $namespace: The namespace of the object.
	    :param string $key: The key identifying the object.
	    
	    This method is called when an object is deleted from your storage engine.

	.. php:method:: setOptions($options=array())
	    :noindex:
        
	    :param array $options: An array of options to set for the storage profile.
	    
	    This method takes the $options array and assigns it to :php:attr:`ExampleDevblocksStorageEngine::$_options`

Examples
========

Comment Search
~~~~~~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.core/plugin.xml#L1254
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.core/api/dao/comment.php#L397