usermeet.sc.controller
----------------------

The **usermeet.sc.controller** extension point allows you to create new modules for your Support Center. Each module will need to be enabled in each individual Support Center instance once your plugin has been enabled. See the :doc:`Community Portal` documentation for more information.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Support Center Controller -->
    <extension point="usermeet.sc.controller">
        <id>example.sc.controller</id>
        <name>Example SC Controller</name>
        <class>
            <file>api/sc/example.php</file>
            <name>ExampleScController</name>
        </class>
        <params>
            <param key="uri" value="example" />
            <param key="menu_title" value="example.sc.title" />
            <param key="icon" value="images/crystal/example.gif" />
        </params>
    </extension>

**<param key="uri" value="example">**
    Binds the tab to the ``example`` url.

**<param key="menu_title" value="example.sc.title">**
    Sets the text of the tab. Devblocks will automatically pass this string through the :doc:`translation service` before rendering it, so you should use a namespaced translation string whenever possible. You can use literal text if you wish, though we advise against it.

**<param key="icon" value="images/crystal/example.gif">**
    Defines the URI to an icon which will be displayed in the Support Center menu. The specified URI is relative to the resources directory of your plugin.
        
Implementation
==============
.. php:class:: ExampleScController extends Extension_UmScController
    
    .. php:method:: handleRequest(DevblocksHttpRequest $request)
        :noindex:
        
        :param DevblocksHttpRequest $request: The current request.
        
        Handles the request when the platform receives a request for this controller. See the documentation on :php:class:`DevblocksHttpRequest` for more information on the data and methods available for each request.
        
    .. php:method:: writeResponse(DevblocksHttpResponse $response)
        :noindex:
        
        :param DevblocksHttpResponse $response: The current response.
        
        Handles sending the response to the browser at the end of the request/response cycle. Access to the current response is provided via the ``$response`` variable. See the documentation on :php:class:`DevblocksHttpResponse` for more information on the data and methods available for each response.
        
    .. php:method:: renderSidebar(DevblocksHttpResponse $response)
        :noindex:
        
        :param DevblocksHttpResponse $response: The current response.
        
        Renders the sidebar for this controller when this controller has processed a request. Access to the current response is provided via the ``$response`` variable. See the documentation on :php:class:`DevblocksHttpResponse` for more information on the data and methods available for each response.
        
    .. php:method:: isVisible()
        :noindex:
        
        :returns boolean:
        
        This method is called before the controller is rendered in the menu, and determines whether or not the controller should be displayed in the menu.
            
    .. php:method:: configure(Model_CommunityTool $instance)
        :noindex:
        
        :param Model_CommunityTool $instance: The instance of the community portal.
        
        Renders the configuration for this controller in the Community Portal area. See the documentation on :php:class:`Model_CommunityTool` for more information on the data and methods available for each instance.
            
    .. php:method:: saveConfiguration(Model_CommunityTool $instance)
        :noindex:
        
        :param Model_CommunityTool $instance: The instance of the community portal.
    
        Saves the configuration data specified in the Community Portal area. See the documentation on :php:class:`Model_CommunityTool` for more information on the data and methods available for each instance.

Examples
========

Tasks tab
~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.kb/plugin.xml#L258
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.kb/api/sc/kb.php#L1