usermeet.sc.rss.controller
------------------------

The **usermeet.sc.rss.controller** extension point allows you to define a new RSS controller to provide access to your data via an RSS feed in the Support Center.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Support Center RSS Controller -->
    <extension point="usermeet.sc.rss.controller">
        <id>example.sc.rss.controller</id>
        <name>Example RSS</name>
        <class>
            <file>api/sc/rss/example.php</file>
            <name>UmScRssExampleController</name>
        </class>
        <params>
            <param key="uri" value="example" />
        </params>
    </extension>

**<extension point="...">**
    Binds a new extension on the specified ``point``.

**<id>**
    Must be unique across all Cerb5 plugins. This is a dot-delimited namespace string. The name is entirely up to you, but the namespace should follow the name of your plugin, and the ID itself should have a hierarchy. If your plugin is named xyzcompany.myplugin then your extension IDs should follow the convention xyzcompany.myplugin.point.name where point.name represents the extension point and a unique identifier for each particular extension.

**<name>**
    A human-readable name for your extension. This can be anything you want. There are situations where you'll want to retrieve your extensions name and use it in functionality exposed to the user (e.g. in a dropdown list); and it's a great approach because the name can be quickly retrieved from the manifest (in memory) without running any plugin-level code.

**<class>**
    Tells Devblocks where to find the extension's implementation in the source code.

    **<file>**
        The relative path to the class file from your plugin's directory.

    **<name>**
        The class name.

**<params>**
    Allow the manifest to pass information to each implementation of an extension. Each ``<param>`` has a key and value attribute. These are static values that are not expected to change. You'll need to implement properties that are configured by the user. 

    **<param key="uri" value="example">**
        Binds the tab to the ``example`` url.
        
    See: :doc:`/developer_guide/plugins/extension_points/cerberusweb.config.tab`

Implementation
==============
.. code-block:: php

    <?php
    abstract class Extension_UmScRssController
        extends DevblocksExtension {
            
            function handleRequest(DevblocksHttpRequest $request) {}
    };
    
**handleRequest()**
    Handles the request when the platform receives a request for this controller. Access to the current request is provided via the ``$request`` variable. See the documentation on :doc:`DevblocksHttpRequest` for more information on the data and methods available for each request.

Examples
========

Tasks tab
~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.kb/plugin.xml#L274
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.kb/api/sc/rss/kb.php#L2