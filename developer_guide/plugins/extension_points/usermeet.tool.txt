usermeet.tool
------------------------

The **usermeet.tool** extension point allows you to define a new Community Portal type from which you can create multiple instances.

Plugin Manifest
===============

In :doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:

.. code-block:: xml
    
    <!-- Templates -->
    <templates set="cerberusweb.support_center">
        <template path="example/index.tpl" />
        <template path="example/header.tpl" />
        <template path="example/footer.tpl" />
    </templates>
    <!-- Usermeet Tool -->
    <extension point="usermeet.tool">
        <id>example.tool</id>
        <name>Example Tool</name>
        <class>
            <file>api/App.php</file>
            <name>UmExampleApp</name>
        </class>
        <params>
            <param key="template_set" value="example.tool" />
        </params>
    </extension>

**<param key="template_set">**
    Defines which plugin the editable templates are sourced from. These templates are editable per-instance, and each editable template must be defined in the ``<templates set="">`` node of the Plugin.xml file specified.
 
Implementation
==============
.. code-block:: php

    <?php
    abstract class Extension_UsermeetTool
        extends DevblocksExtension
        implements DevblocksHttpRequestHandler {
            private $portal = '';
            
            /*
             * Site Key
             * Site Name
             * Site URL
             */
             
            /**
             * @param DevblocksHttpRequest
             * @return DevblocksHttpResponse
             */
            public function handleRequest(DevblocksHttpRequest $request) {
                $path = $request->path;
                
                @$a = DevblocksPlatform::importGPC($_REQUEST['a'],'string');
                
                if(empty($a)) {
                    @$action = array_shift($path) . 'Action';
                } else {
                    @$action = $a . 'Action';
                }
                
                switch($action) {
                    case NULL:
                        // [TODO] Index/page render
                        break;
                        //            
                    default:
                        // Default action, call arg as a method suffixed with Action
                        if(method_exists($this,$action)) {
                            call_user_func(array(&$this, $action)); // [TODO] Pass HttpRequest as arg?
                        }
                        break;
                }
            }

            public function writeResponse(DevblocksHttpResponse $response) {}

            /**
             * @param Model_CommunityTool $instance
             */
            public function configure(Model_CommunityTool $instance) {}

            public function saveConfiguration(Model_CommunityTool $instance) {}
    };

**handleRequest(DevblocksHttpRequest $request)**
    Handles the request when the platform receives a request for this tool. Access to the current request is provided via the ``$request`` variable. See the documentation on :doc:`DevblocksHttpRequest </developer_guide/devblocks/devblockshttprequest>` for more information on the data and methods available for each request.

**writeResponse(DevblocksHttpResponse $response)**
    Handles sending the response to the browser at the end of the request/response cycle. Access to the current response is provided via the ``$response`` variable. See the documentation on :doc:`DevblocksHttpResponse </developer_guide/devblocks/devblockshttpresponse>` for more information on the data and methods available for each response.
    
**configure(Model_CommunityTool $instance)**
    Renders the configuration for this tool in the Community Portal area. The method is passed an instance of the tool being modified in the ``$instance`` parameter. See the documentation on :doc:`Model_CommunityTool </developer_guide/devblocks/models/model_communitytool>` for more information on the data and methods available for each instance.
    
**saveConfiguration(Model_CommunityTool $instance)**
    Saves the configuration data specified in the Community Portal area. The method is passed an instance of the tool being modified in the ``$instance`` parameter. See the documentation on :doc:`Model_CommunityTool </developer_guide/devblocks/models/model_communitytool>` for more information on the data and methods available for each instance.

Examples
========

Support Center
~~~~~~~~~~~~~~

:doc:`plugin.xml </developer_guide/plugins/plugin.xml>`:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.support_center/plugin.xml#L58
Implementation:
    https://github.com/wgm/cerb5/blob/5.7.1/features/cerberusweb.support_center/api/UmScApp.php#L63