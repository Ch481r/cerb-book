Attachments
-----------
Retrieve, download, and search attachment objects.

Retrieve
========
**GET /attachments/<id>.json**

Retrieve an attachment object.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'attachments/1.json');
	
Download
========
**GET /attachments/<id>/download.json**

Download an attachment.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'attachments/1/download.json');

Upload
======
**POST /attachments/upload.json**

.. versionadded:: 6.3

Upload an attachment object.

    ==============      =========  ===
    Field               Type
    ==============      =========  ===
    ``file_name``       string     **required**
    ``mime_type``       string     **required**
    ``encoding``        string     ``text`` or ``base64``
    ``content``         string     **required**
    ==============      =========  ===

**Examples:**

.. code-block:: php

    <?php
	$postfields = array(
		array('file_name','test.txt'),
		array('mime_type','text/plain'),
		array('encoding','text'), // text, base64
		array('content','These are the file contents'),
	);
	$out = $cerb6->post($base_url . 'attachments/upload.json', $postfields);

Using base64 encoding for binary files:

.. code-block:: php

    <?php
	$postfields = array(
		array('file_name','image.png'),
		array('mime_type','image/png'),
		array('encoding','base64'), // text, base64
		array('content',base64_encode(file_get_contents('/path/to/image.png'))),
	);
	$out = $cerb6->post($base_url . 'attachments/upload.json', $postfields);
	
Search
======
**POST /attachments/search.json**

:doc:`Perform a search </developer_guide/rest_api/topics/search>` for attachment objects.

Options:

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    ======================  =========  ===
    Field                   Type
    ======================  =========  ===
    ``context``             string
    ``context_id``          integer
    ``display_name``        string
    ``guid``                string
    ``id``                  integer
    ``mime_type``           string
    ``sha1_hash``           string
    ``size``                integer
    ``storage_extension``   string
    ``storage_key``         string
    ``storage_profile_id``  integer
    ``updated``             timestamp
    ======================  =========  ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **subtotals[]**
    .. versionadded:: 6.7.2

    Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    =====================  ========
    Key                    Description
    =====================  ========
    ``display_name``       File name
    ``mime_type``          MIME type
    ``storage_extension``  Storage engine (e.g. disk, database, S3)
    =====================  ========

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('criteria[]','id'),
        array('oper[]','='),
        array('value[]','116'),
        array('sortBy','id'),
        array('sortAsc','1'),
        array('page','1'),
    );
    $out = $cerb->post($base_url . 'attachments/search.json', $postfields);

