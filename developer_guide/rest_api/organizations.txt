Organizations
-------------
Create, retrieve, update, and search organization objects.

Create
======
**POST /orgs/create.json**

Create an organization object.

    ===============      =========  ===
    Field                Type
    ===============      =========  ===
    ``name``             string     **required**
    ``street``           string   
    ``city``             string   
    ``province``         string   
    ``postal``           string   
    ``country``          string   
    ``phone``            string   
    ``website``          string   
    ``created``          timestamp
    ``custom_*``         mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============      =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('name','deCODE Genetics'),
    );
    $out = $cerb->post($base_url . 'orgs/create.json', $postfields);
	
Retrieve
========
**GET /orgs/<id>.json**

Retrieve an organization object.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'orgs/1.json');
	
Update
======
**PUT /orgs/<id>.json**

Update an organization object.

    ===============      =========  ===
    Field                Type
    ===============      =========  ===
    ``city``             string   
    ``country``          string   
    ``created``          timestamp
    ``name``             string   
    ``phone``            string   
    ``postal``           string   
    ``province``         string   
    ``street``           string   
    ``website``          string   
    ``custom_*``         mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============      =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('name','deCODE Genetics'),
    );
    $out = $cerb->post($base_url . 'orgs/create.json', $postfields);
	
Search
======
**POST /orgs/search.json**

:doc:`Perform a search </developer_guide/rest_api/topics/search>` for organization objects.

Options:

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    ===============      =========  ===
    Field                Type
    ===============      =========  ===
    ``city``             string   
    ``country``          string   
    ``created``          timestamp
    ``id``               integer   
    ``name``             string   
    ``phone``            string   
    ``postal``           string   
    ``province``         string   
    ``street``           string   
    ``website``          string   
    ``custom_*``         mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============      =========  ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **subtotals[]**
    .. versionadded:: 6.7.2

    Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    ===============      ========
    Key                  Description
    ===============      ========
    ``country``          Orgs by country
    ``fieldsets``        Custom fieldsets on orgs
    ``links``            Objects linked to orgs
    ``postal``           Orgs by postal code
    ``province``         Orgs by state/province
    ``watchers``         Watchers on orgs
    ===============      ========

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('criteria[]','name'),
        array('oper[]','like'),
        array('value[]','t*'),
        array('sortBy','name'),
        array('sortAsc','1'),
        array('page','1'),
    );
    $out = $cerb->post($base_url . 'orgs/search.json', $postfields);