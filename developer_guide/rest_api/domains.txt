Domains
-------
Create, retrieve, update, and search domain objects.

Create
======
**POST /domains/create.json**

Create a domain object.

    ===============       =========  ===
    Field                 Type
    ===============       =========  ===
    ``created``           timestamp
    ``name``              string
    ``server_id``         integer
    ``custom_*``          mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============       =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('name','site.example.com'),
        array('server_id', 123),
    );
    $out = $cerb->post($base_url . 'domains/create.json', $postfields);

Retrieve
========
**GET /domains/<id>.json**

Retrieves a domain object.

Options:

* **expand**
	The :ref:`keys to expand <api_key_expansion>` on the object as a comma-separated list, including any of these special keys:
	
	``contacts``
		Retrieve full contacts list for each domain.

	``contacts_list``
		Retrieve comma-separated contacts list for each domain.

	``watchers``
		Retrieve watchers list for each domain.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'domains/1.json?expand=contacts');
	
Update
======
**PUT /domains/<id>.json**

Update a domain object.

    ===============       =========  ===
    Field                 Type
    ===============       =========  ===
    ``created``           timestamp
    ``name``              string
    ``server_id``         integer
    ``custom_*``          mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============       =========  ===

**Example:**

.. code-block:: php
	
    <?php
    $postfields = array(
        array('server_id', 456),
    );
    $out = $cerb->put($base_url . 'domains/1.json', $postfields);
	
Search
======
**POST /domains/search.json**

:doc:`Perform a search </developer_guide/rest_api/topics/search>` for domain objects.

Options:

* **q**
    .. include:: _includes/search/common_option_q.txt

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    ===============      =========  ===
    Field                Type
    ===============      =========  ===
    ``created``          timestamp
    ``name``             string
    ``server_id``        integer
    ``custom_*``         mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============      =========  ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **expand**
	The :ref:`keys to expand <api_key_expansion>` on the object as a comma-separated list, including any of these special keys:
	
	``contacts``
		Retrieve full contacts list for each domain.

	``contacts_list``
		Retrieve comma-separated contacts list for each domain.

	``watchers``
		Retrieve watchers list for each domain.

* **subtotals[]**
    Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    ===============      ========
    Key                  Description
    ===============      ========
    ``fieldsets``        Custom fieldsets on the domains
    ``links``            Objects linked to domains
    ``server``           Parent server object
    ``watchers``         Watchers on domains
    ===============      ========

**Examples:**
	
.. code-block:: php
    
    <?php
    $postfields = array(
         array('q','Hades'),
         array('expand','server_'),
         array('sortBy','name'),
         array('sortAsc','1'),
         array('page','1'),
    );
    $out = $cerb->post($base_url . 'domains/search.json', $postfields);

.. code-block:: php
    
    <?php
    $postfields = array(
         array('expand','server_'),
         array('criteria[]','server_id'),
         array('oper[]','='),
         array('value[]',123),
         array('sortBy','name'),
         array('sortAsc','1'),
         array('page','1'),
    );
    $out = $cerb->post($base_url . 'domains/search.json', $postfields);

Contacts
========
**POST /domains/123/contacts.json**

Add or remove contacts on a domain object.  The contacts can be specified by email address, ID, or any combination of both.

Parameters:

* **mode**
	Either ``add`` or ``remove``.

* **emails**
	A comma-separated list of email addresses to add or remove.

* **ids**
    A comma-separated list of email address IDs to add or remove.
	
**Example:**

.. code-block:: php
	
    <?php
    $postfields = array(
    	array('mode','add'),
    	array('emails','jeff@example.com,darren@example.com'),
    	array('ids','1'),
    );
    $out = $cerb6->post($base_url . 'domains/123/contacts.json', $postfields);
