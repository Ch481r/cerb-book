Feedback
--------
Create, retrieve, update, and search feedback objects.

Create
======
**POST /feedback/create.json**

Create a new feedback object.

    =====================   =========  ===
    Field                   Type
    =====================   =========  ===
    ``author_address``      string
    ``created``             timestamp
    ``quote_mood``          string     ``praise``, ``neutral``, ``criticism``
    ``quote_text``          string
    ``url``                 string
    ``custom_*``            mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    =====================   =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('quote_text','This is the best app ever!'),
        array('author_address','happy-user@example.com'),	
    );
    $out = $cerb->post($base_url . 'feedback/create.json', $postfields);

Retrieve
========
**GET /feedback/<id>.json**

Retrieve a feedback object.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'feedback/1.json');
	
Update
======
**PUT /feedback/<id>/xml**

Update a feedback object.

    =====================   =========  ===
    Field                   Type
    =====================   =========  ===
    ``author_address``      string
    ``created``             timestamp
    ``quote_mood``          string     ``praise``, ``neutral``, ``criticism``
    ``quote_text``          string
    ``url``                 string
    ``custom_*``            mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    =====================   =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('url','http://www.google.com/'),
        array('quote_mood','praise'),
    );
    $out = $cerb->put($base_url . 'feedback/1.json', $postfields);
	
Search
======
**POST /feedback/search.json**

Perform a search for feedback objects.

Options:

* **q**
    .. include:: _includes/search/common_option_q.txt

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    =====================   =========  ===
    Field                   Type
    =====================   =========  ===
    ``id``                  integer
    ``author_address``      string
    ``created``             timestamp
    ``quote_mood``          string     ``praise``, ``neutral``, ``criticism``
    ``quote_text``          string
    ``url``                 string
    ``custom_*``            mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    =====================   =========  ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **subtotals[]**
	Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    ==================   ========
    Key                  Description
    ==================   ========
    ``author_address``   Author email address
    ``fieldsets``        Custom fieldsets on feedback
    ``quote_mood``       Feedback sentiment (e.g. praise, criticism)
    ``watchers``         Watchers on feedback
    ==================   ========

**Examples:**

.. code-block:: php

    <?php
    $postfields = array(
        array('q','mood:praise'),
        array('sortBy','id'),
        array('sortAsc','1'),
        array('page','1'),
    );
    $out = $cerb->post($base_url . 'feedback/search.json', $postfields);
    
.. code-block:: php

    <?php
    $postfields = array(
        array('criteria[]','author_address'),
        array('oper[]','like'),
        array('value[]','a*'),
        array('sortBy','id'),
        array('sortAsc','1'),
        array('page','1'),
    );
    $out = $cerb->post($base_url . 'feedback/search.json', $postfields);