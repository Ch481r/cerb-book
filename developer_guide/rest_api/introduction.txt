Introduction
------------

The Rest API allows you to integrate a lot of the functionality of Cerb5 with other applications. For example, you could use the Rest API to view and create new tickets, monitor notifications, or manage tasks, all within your own application. The Rest API uses worker logins and permissions to authenticate API calls, and it supports returning results in both the XML and JSON formats. The Rest API also fully supports reading and writing custom fields for all objects.

Installation
============

Like many parts of Cerb5, the RestAPI functionality is provided through a plugin. You'll need to enable the RestAPI plugin before you can take advantage of the RestAPI functionality.

Library
=======

We've written a PHP (5.2+) library that makes it easier to interact with the Rest API. You can download the library :download:`here <Cerb5Api.php.txt>`. Make sure you rename it from ``Cerb5Api.php.txt`` to ``Cerb5Api.php`` before trying to use the below example code.

Example
=======

Comprehensive examples are provided for each object in the following sections of the book, but you'll need use the below code to setup the environment before you can use them.

.. code-block:: php

    <?php
	require_once("Cerb5Api.php");

	$base_url = 'http://localhost/cerb5/rest/'; // URL to your Cerb5 install
	$access_key = "superuser@localhost"; // Worker's Email Address
	$secret_key = "mypassword";  // Worker's Password

	$cerb5 = new Cerb5_WebAPI($access_key, $secret_key);

	// Please see the examples in the following sections of the book
	// Your object calls will go here

	if(null != ($content_type = $cerb5->getContentType())) {
        header("Content-Type: " . $content_type);
        echo $out;
        
Data Types
==========

Throughout the following sections, many different datatypes are used for different fields on each object. Below is a list of each data type and a short explanation about it.

bit
	A bit is binary flag; Use a value of 0 for false and a value of 1 for true.
integer
	An integer is a number with no decimals or commas.
timestamp
	An integer representing the number of seconds since the Unix Epoch (00:00:00 UTC January 1st, 1970)
string
	Any value wrapped in single- or double-quotes.
mixed
	A mixed data type can be any of the above, depending on the custom field in question. See the :doc:`documentation on Custom Fields</concepts/objects/custom_fields>` for more information.