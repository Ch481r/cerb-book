Tasks
-----
Create, retrieve, update, and search task objects.

Create
======
**POST /tasks/create.json**

Create a task object.

    ================    =========  ===
    Field                 Type
    ================    =========  ===
    ``completed``       timestamp
    ``due``             timestamp
    ``is_completed``    bit
    ``title``           string     **required**
    ``updated``         timestamp
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ================    =========  ===    

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('title','Finish documentation'),
    );
    $out = $cerb->post($base_url . 'tasks/create.json', $postfields);

Retrieve
========
**GET /tasks/<id>.json**

Retrieve a task object.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'tasks/1.json');
	
Update
======
**PUT /tasks/<id>.json**

Update a task object.

    ================    =========  ===
    Field                 Type
    ================    =========  ===
    ``completed``       timestamp
    ``due``             timestamp
    ``is_completed``    bit
    ``title``           string
    ``updated``         timestamp
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ================    =========  ===

**Example:**

.. code-block:: php
	
    <?php
    $postfields = array(
        array('title','Complete documentation'),
        array('assignee_id', '1'),
    );
    $out = $cerb->put($base_url . 'tasks/1.json', $postfields);
	
Search
======
**POST /tasks/search.json**

:doc:`Perform a search </developer_guide/rest_api/topics/search>` for task objects.

Options:

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    ================    =========  ===
    Field                 Type
    ================    =========  ===
    ``completed``       timestamp
    ``due``             timestamp
    ``id``              integer
    ``is_completed``    bit
    ``title``           string
    ``updated``         timestamp
    ``watchers``        integer[]
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ================    =========  ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **subtotals[]**
    .. versionadded:: 6.7.2

    Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    =================    ========
    Key                  Description
    =================    ========
    ``fieldsets``        Custom fieldsets on the addresses
    ``is_completed``     Tasks by completion status
    ``links``            Objects linked to addresses
    ``watchers``         Watchers on addresses
    =================    ========

**Example:**
    
.. code-block:: php
	
    <?php
    $postfields = array(
        array('criteria[]','title'),
        array('oper[]','like'),
        array('value[]','t*'),
        array('criteria[]','watchers'),
        array('oper[]','in'),
        array('value[]','[1,2,3]'),
        array('sortBy','id'),
        array('sortAsc','1'),
        array('page','1'),
    );
    $out = $cerb->post($base_url . 'tasks/search.json', $postfields);