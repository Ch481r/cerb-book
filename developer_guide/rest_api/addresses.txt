Addresses
---------
Retrieve, create, update, and search email address objects.

Retrieve
========
**GET /addresses/<id>.json**

Retrieve an email address object.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'addresses/1.json');

Create
======
**POST /addresses/create.json**

Create a new email address object using the following fields:

    ==============      =========  ===
    Field               Type     
    ==============      =========  ===
    ``email``           string     **required**
    ``first_name``      string
    ``is_banned``       bit
    ``is_defunct``      bit
    ``last_name``       string
    ``org_id``          integer
    ``updated``         timestamp
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ==============      =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('email','gaius.baltar@localhost'),
        array('first_name','Gaius'),
        array('last_name','Baltar'),
        array('custom_16','http://www.cerberusweb.com/'),
    );
    $out = $cerb->post($base_url . 'addresses/create.json', $postfields);

Update
======
**PUT /addresses/<id>.json**

Update an existing email address object using any of the following fields:

    ==============      =========  ===
    Field               Type
    ==============      =========  ===
    ``email``           string
    ``first_name``      string
    ``is_banned``       bit
    ``is_defunct``      bit
    ``last_name``       string
    ``org_id``          integer
    ``updated``         timestamp
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ==============      =========  ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('email','gaius.baltar@cerberusdemo.com'),
        array('first_name','Gaius'),
        array('last_name','Baltar'),
        array('custom_16','http://www.cerberusdemo.com/'),
    );
    $out = $cerb->post($base_url . 'addresses/1.json', $postfields);

Search
======
**POST /addresses/search.json**

:doc:`Perform a search </developer_guide/rest_api/topics/search>` for address objects.

Options:

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    ===============      =========  ===
    Field                Type
    ===============      =========  ===
    ``id``               integer
    ``email``            string
    ``first_name``       string
    ``is_banned``        bit
    ``is_defunct``       bit
    ``last_name``        string
    ``num_nonspam``      integer
    ``num_spam``         integer
    ``org_id``           integer
    ``org_name``         string
    ``updated``          timestamp
    ``custom_*``         mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ===============      =========  ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **subtotals[]**
    .. versionadded:: 6.7.2

    Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    ===============      ========
    Key                  Description
    ===============      ========
    ``first_name``       Contact first name
    ``fieldsets``        Custom fieldsets on the addresses
    ``is_banned``        Whether senders are banned or not
    ``is_defunct``       Whether senders are defunct or not
    ``last_name``        Contact last name
    ``links``            Objects linked to addresses
    ``org_name``         Contact organization name
    ``watchers``         Watchers on addresses
    ===============      ========


**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('criteria[]','org_id'),
        array('oper[]','='),
        array('value[]','1'),
        array('criteria[]','is_banned'),
        array('oper[]','='),
        array('value[]','0'),
        array('criteria[]','email'),
        array('oper[]','like'),
        array('value[]','jeff@*'),
        array('sortBy','email'),
        array('sortAsc','1'),
        array('page','1'),
    );
    $out = $cerb->post($base_url . 'addresses/search.json', $postfields);