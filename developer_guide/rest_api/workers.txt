Workers
-------
Create, retrieve, update, and search worker objects.

Current Worker
==============
**GET /workers/me.json**

Retrieve the object for the current worker based on the given API credentials.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'workers/me.json');

Create
======
**POST /workers/create.json**

Create a worker object.

    =================   ========   ===
    Field               Type
    =================   ========   ===
    ``email``           string     **required**
    ``first_name``      string
    ``last_name``       string
    ``password``        string
    ``title``           string
    ``is_disabled``     bit        0=active, 1=disabled
    ``is_superuser``    bit        0=worker, 1=superuser
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    =================   ========   ===

**Example:**

.. code-block:: php

    <?php
    $postfields = array(
        array('email','tony.stark@example.com'),
        array('first_name','Tony'),
        array('last_name','Stark'),
        array('password','test'),
    );
    $out = $cerb->post($base_url . 'workers/create.json', $postfields);
	
Retrieve
========
**GET /workers/<id>.json**

Retrieve a worker object.

**Example:**

.. code-block:: php

    <?php
    $out = $cerb->get($base_url . 'workers/1.json');
	
Update
======
**PUT /workers/<id>.json**

Update a worker object.

    =================   ========   ===
    Field               Type
    =================   ========   ===
    ``email``           string
    ``first_name``      string
    ``last_name``       string
    ``password``        string
    ``title``           string
    ``is_disabled``     bit        0=active, 1=disabled
    ``is_superuser``    bit        0=worker, 1=superuser
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    =================   ========   ===

**Example:**

.. code-block:: php
	
    <?php
    $postfields = array(
        array('title','Superhero'),
        array('password','new'),
    );
    $out = $cerb->put($base_url . 'workers/1.json', $postfields);
	
Search
======
**POST /workers/search.json**

:doc:`Perform a search </developer_guide/rest_api/topics/search>` for worker objects.

Options:

* **q**
    .. include:: _includes/search/common_option_q.txt

* **criteria[]**, **oper[]**, **value[]**
    Each search filter should include an options triplet with a criteria, operator, and value.  ``criteria[]`` specifies a field from the list below.  ``oper[]`` specifies one of :doc:`these operators </developer_guide/rest_api/topics/search>`.  The format of ``value[]`` varies depending on the criteria and operator.

    ================    ========   ===
    Field               Type
    ================    ========   ===
    ``email``           string
    ``first_name``      string
    ``id``              integer
    ``is_disabled``     bit        0=active, 1=disabled
    ``is_superuser``    bit        0=worker, 1=superuser
    ``last_name``       string
    ``title``           string
    ``custom_*``        mixed      :doc:`instructions </developer_guide/rest_api/topics/custom_fields>`
    ================    ========   ===

* **sortBy**
    The *field* to sort the results by, from the ``criteria[]`` table above.

* **sortAsc**
    ``1`` for ascending, ``0`` for descending

* **limit**
    The number of results to display per page.

* **page**
    The page number of results to display, starting with ``1``.

* **subtotals[]**
    Multiple subtotal sets can be returned with the results by adding a ``subtotals[]`` field for each one using the following keys:
    
    ================     ========
    Key                  Description
    ================     ========
    ``fieldsets``        Custom fieldsets on workers
    ``first_name``       Workers by first name
    ``is_disabled``      Workers by active/disabled
    ``is_superuser``     Workers by superuser/worker
    ``last_name``        Workers by last name
    ``links``            Objects linked to workers
    ``title``            Workers by title
    ================     ========

**Examples:**

.. code-block:: php
    
    <?php
    $postfields = array(
         array('q','Developer'),
         array('sortBy','first_name'),
         array('sortAsc','1'),
         array('page','1'),
    );
    $out = $cerb->post($base_url . 'workers/search.json', $postfields);
    
.. code-block:: php
    
    <?php
    $postfields = array(
         array('criteria[]','is_superuser'),
         array('oper[]','='),
         array('value[]','0'),
         array('criteria[]','first_name'),
         array('oper[]','like'),
         array('value[]','*'),
         array('sortBy','first_name'),
         array('sortAsc','1'),
         array('page','1'),
    );
    $out = $cerb->post($base_url . 'workers/search.json', $postfields);