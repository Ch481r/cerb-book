Message
-------

DAO_Message
===========

.. php:class:: DAO_Message
    
    .. php:const:: ID
        
        The id field.
        
    .. php:const:: TICKET_ID
        
        The ticket_id field.        
        
    .. php:const:: CREATED_DATE
        
        The created_date field.
        
    .. php:const:: ADDRESS_ID
        
        The address_id field.
        
    .. php:const:: IS_OUTGOING
        
        The is_outgoing field.
        
    .. php:const:: WORKER_ID
        
        The worker_id field.
        
    .. php:const:: STORAGE_EXTENSION
        
        The storage_extension field.
        
    .. php:const:: STORAGE_KEY
        
        The storage_key field.
        
    .. php:const:: STORAGE_PROFILE_ID
        
        The storage_profile_id field.
        
    .. php:const:: STORAGE_SIZE
        
        The storage_size field.
        
    .. php:staticmethod:: create($fields, $also_notify_worker_ids)

        :param array $fields: An array of the fields to set for the new message. The array should be keyed on the DAO_Message class constants above.
        :param array $also_notify_worker_ids: An array of worker ids to notify about the message.
        :returns integer: The id of the new message.

        Creates a message.

    .. php:staticmethod:: delete($ids)

        :param mixed $ids: An integer or array of integers representing the ids of the objects to be deleted.
        :returns boolean: A boolean representing whether the call was successful or not.

        Deletes a message.

    .. php:staticmethod:: get($id)

        :param integer $id: The id of the message to retrieve.
        :returns Model_Message:

        Retrieves a message.
        
    .. php:staticmethod:: getMessageByTicket($ticket_id)
        
        :param integer $ticket_id: The id of the ticket.
        :returns array: An array of Model_Message objects.
        
        Returns all of the messages associated with the specified ticket.        
        
    .. php:staticmethod:: getWhere($where=null, $sortBy='created', $sortAsc=false, $limit=null)

        :param string $where: Sets the WHERE clause of the query. If null, no WHERE clause will be used, and all objects will be returned.
        :param string $sortBy: The field to sort by. Defaults to 'created'.
        :param boolean $sortAsc: Whether to sort by descending or ascending values. Defaults to false (descending) by default.
        :param integer $limit: The amount of records to LIMIT the query result to.
        :returns array: An array of Model_Message objects.    
    
    .. php:staticmethod:: random()

        Returns a random message.

    .. php:staticmethod:: search($params, $limit=10, $page=0, $sortBy=null, $sortAsc=null, $withCounts=true)

        :param array $params: An array of DevblocksSearchCriteria to restrict the search to.
        :param integer $limit: The max amount of results to return.
        :param integer $page: If the results have been limited, this parameter will cause the results to return the next set.
        :param string $sortBy: Defaults to null.
        :param boolean $sortAsc: Defaults to null (false).
        :param boolean $withCounts: Whether to include counts in the return array or not. Defaults to true.
        :returns array: Returns an array with the results, and the total number of records if $withCounts is true.

        Returns objects matching the given criteria.

    .. php:staticmethod:: update($ids, $fields)

        :param mixed $ids: An integer or array of integers representing the ids of the objects to be updated.
        :param array $fields: An array of the fields to set. The array should be keyed on the DAO_Message class constants above.

        Updates a message (or multiple messages).

Model_Message
=============

.. php:class:: Model_Message
    
    .. php:attr:: $id
        
        The id of the message.
        
    .. php:attr: $ticket_id
        
        The ticket_id associated with the message.
        
    .. php:attr:: $created_date
        
        The timestamp representing when the message was created.
        
    .. php:attr:: $address_id
        
        The id of the worker who left the message.
        
    .. php:attr:: $is_outgoing
        
        A boolean representing whether the message is incoming or outgoing.
        
    .. php:attr:: $worker_id
        
        The id of the worker who wrote the message, if applicable.
        
    .. php:attr:: $storage_extension
        
        The extension id of the storage engine where the message is stored.
        
    .. php:attr:: $storage_key
        
        The storage key of the message.
        
    .. php:attr:: $storage_profile_id
        
        The storage profile which contains the message.
        
    .. php:attr:: $storage_size
        
        The total size of the stored message.
        
    .. php:method:: getAttachments()
        
        :returns array: An array of Model_Attachments.
        
        Gets all of the attachments linked to the message.
    
    .. php:method:: getContent($fp)
        
        :param resource $fp: An optional resource to use when retrieving the message.
        :returns string:
        
        Retrieves the content of the message.
        
    .. php:method:: getHeaders()
        
        :returns array: An array of Model_MessageHeader objects.
        
        Retrieves all of the headers associated with the message.
    
    .. php:method:: getLinksAndAttachments()
        
        :returns array: An array of Model_AttachmentLinks.

        Returns all attachment links associated with the message.
        
    .. php:method:: getSender()
        
        :returns Model_Address:
        
        Caches and returns the address object that sent the message.